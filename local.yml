---
- hosts: localhost
  connection: local
  become: true

  vars_files:
    - vars/flatpaks.yml

  tasks:

# Mount all drives
# Install CFIS Prereqs
  - name: Install CFIS Prereqs
    package: 
      name:
        - cifs-utils
  - name: Mount Scanner Network Drives
    ignore_unreachable: yes
    mount:
      src: //synlgy-ds918.cyberfighter.space/scanner
      path: /mnt/NAS_Scanner
      opts: credentials=/home/cyberfighter/.nas_Jonny_credentials,iocharset=utf8,uid=1028,gid=100,noperm,vers=2.0
      state: mounted
      fstype: cifs
  - name: Mount Jonny Network Drives
    ignore_unreachable: yes
    mount:
      src: //synlgy-ds918.cyberfighter.space/home
      path: /mnt/NAS_Jonny
      opts: credentials=/home/cyberfighter/.nas_Jonny_credentials,iocharset=utf8,uid=1028,gid=100,noperm,vers=2.0
      state: mounted
      fstype: cifs
  - name: Mount Temp Network Drives
    ignore_unreachable: yes
    mount:
      src: //synlgy-ds918.cyberfighter.space/Temp
      path: /mnt/NAS_Temp
      opts: credentials=/home/cyberfighter/.nas_Jonny_credentials,iocharset=utf8,uid=1028,gid=100,noperm,vers=2.0
      state: mounted
      fstype: cifs
  - name: Mount Media Network Drives
    ignore_unreachable: yes
    mount:
      src: //synlgy-ds918.cyberfighter.space/Media
      path: /mnt/NAS_Media
      opts: credentials=/home/cyberfighter/.nas_Jonny_credentials,iocharset=utf8,uid=1028,gid=100,noperm,vers=2.0
      state: mounted
      fstype: cifs
  - name: Mount Onedrive Network Drive
    ignore_unreachable: yes
    mount:
      src: //synlgy-ds918.cyberfighter.space/Onedrive
      path: /mnt/NAS_Onedrive
      opts: credentials=/home/cyberfighter/.nas_Jonny_credentials,iocharset=utf8,uid=1028,gid=100,noperm,vers=2.0
      state: mounted
      fstype: cifs


# Remove packages
  - name: Remove any residual docker packages
    apt:
      state: absent
      name:
        - docker
        - docker-engine
        - docker.io
        - containerd
        - runc

# Install Docker Prereqs
  - name: Install Docker Prereqs
    package: 
      name:
        - apt-transport-https
        - ca-certificates
        - curl
        - gnupg-agent
        - software-properties-common

# Adding Repo Keys
  - name: add Enpass key for repo
    get_url:
      url: "https://apt.enpass.io/keys/enpass-linux.key"
      dest: /etc/apt/trusted.gpg.d/enpass.asc
      mode: '0644'
      force: true
  - name: add Vivaldi key for repo
    get_url:
      url: "https://repo.vivaldi.com/archive/linux_signing_key.pub"
      dest: /etc/apt/trusted.gpg.d/vivaldi.asc
      mode: '0644'
      force: true
  - name: add VSCode key for repo
    get_url:
      url: "https://packages.microsoft.com/keys/microsoft.asc"
      dest: /etc/apt/trusted.gpg.d/microsoft.asc
      mode: '0644'
      force: true
  - name: add Docker key for repo
    get_url:
      url: "https://download.docker.com/linux/ubuntu/gpg"
      dest: /etc/apt/trusted.gpg.d/docker.asc
      mode: '0644'
      force: true



# Adding Repos
  - name: Add Enpass repository into sources list
    apt_repository:
      repo: deb https://apt.enpass.io/ stable main
      state: present
      update_cache: yes
  - name: Add Vivaldi repository into sources list
    apt_repository:
      repo: deb https://repo.vivaldi.com/archive/deb/ stable main
      state: present
      update_cache: yes
  - name: Add VSCode repository into sources list
    apt_repository:
      repo: deb [arch=amd64] https://packages.microsoft.com/repos/vscode stable main
      state: present
      update_cache: yes
  - name: Add Docker repository into sources list
    apt_repository:
      repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_lsb.codename }} stable
      state: present
      update_cache: yes
      

# Installing Packages
  - name: Install packages
    package: 
      name:
        - htop
        - flatpak
        - snapd
        - gnome-tweaks
        - enpass
        - vivaldi-stable
        - code
        - profile-sync-daemon
        - gnome-boxes
        - python3-pip
        - docker-ce
        - docker-ce-cli
        - containerd.io
        - docker-compose
        - micro
        - xclip
        - timeshift
        - steam
#         - lutris # Removed lutris to maintain compatability
        - openssh-server
        - python3-pyqt5.qtserialport # For Tasmotizer
        - kdeconnect
        - blender
        - lm-sensors # Need to add the command for sudo sensors-detect
        - freecad
        
# Install Flatpaks
  - name: Add the flathub flatpak repository remote to the user installation
    become_user: cyberfighter
    flatpak_remote:
      name: flathub
      state: present
      flatpakrepo_url: "https://flathub.org/repo/flathub.flatpakrepo"
      method: user
  - name: Install Flatpaks
    become_user: cyberfighter
    flatpak:
      name: "{{ item }}"
      state: present
      method: user
    with_items: "{{ flatpak_install }}"

# Install Snap Packages
  - name: Install Snap Packages
    snap:
      name:
        - mqtt-explorer

# Install Pip Packages
  - name: Install Pip Packages
    pip:
      name:
        - bpytop
        - PyQt5
        - pyserial

# Install software from Git
  - name: Install Tasmotizer
    become_user: cyberfighter
    git:
      repo: 'https://github.com/tasmota/tasmotizer.git'
      dest: ~/projects/home-automation/tasmotizer
      clone: yes
      update: yes
# PrusaSlicer Folder and Download
  - name: Create 3d printing folder
    become_user: cyberfighter
    file:
      path: ~/projects/3D-printing/
      state: directory      
  - name: Get Latest PrusaSlicer      
    uri:                                                               
      url: https://api.github.com/repos/prusa3d/PrusaSlicer/releases/latest
      return_content: true                                             
    register: PrusaSlicer_json_reponse                                       
  - name: Install PrusaSlicer
    become_user: cyberfighter
    loop: "{{ PrusaSlicer_json_reponse.json.assets }}"
    when: item.name | regex_search('GTK.*AppImage')
    get_url:                                                           
      url: "{{ item.browser_download_url }}"                       
      dest: ~/projects/3D-printing/PrusaSlicer-GTK.AppImage
      mode: '0775'
    loop_control:
      label: "{{ item.name }}"
# xLights Folder and Download
  - name: Create RGB Lights Folder
    become_user: cyberfighter
    file:
      path: ~/projects/RGB-Lights/
      state: directory      
  - name: Get Latest xLights     
    uri:                                                               
      url: https://api.github.com/repos/smeighan/xLights/releases/latest
      return_content: true                                             
    register: xLights_json_reponse    
  - name: Install xLights
    become_user: cyberfighter
    loop: "{{ xLights_json_reponse.json.assets }}"
    when: item.name | regex_search('AppImage')
    get_url:                                                           
      url: "{{ item.browser_download_url }}"                       
      dest: ~/projects/RGB-Lights/xLights.AppImage
      mode: '0775'
    loop_control:
      label: "{{ item.name }}"
  - name: Get Latest Prusa 3S Firmware     
    uri:                                                               
      url: https://api.github.com/repos/prusa3d/Prusa-Firmware/releases/latest
      return_content: true                                             
    register: PrusaFirmware_json_reponse                                       
  - name: Install Prusa Firmware
    become_user: cyberfighter
    loop: "{{ PrusaFirmware_json_reponse.json.assets }}"
    when: "'MK3S' in item.name"
    get_url:                                                           
      url: "{{ item.browser_download_url }}"                       
      dest: ~/projects/3D-printing/{{ item.name }}
    loop_control:
      label: "{{ item.name }}"


# Copying over config files
  - name: Copy Profile Sync Daemon conf file
    become_user: cyberfighter
    copy:
      src: files/psd.conf
      dest: ~/.config/psd/psd.conf
      owner: cyberfighter
      group: cyberfighter
  - name: Copy Timeshift conf file
    copy:
      src: files/timeshift.json
      dest: /etc/timeshift.json
      owner: root
      group: root
      mode: '0644'
# Tasmotizer Launcher
  - name: Copy Tasmotizer icon
    become_user: cyberfighter
    copy:
      src: files/tasmotizer-icon.jpg
      dest: ~/projects/home-automation/tasmotizer/tasmotizer-icon.jpg
      owner: cyberfighter
      group: cyberfighter
      mode: '0644'
  - name: Copy Tasmotizer Launcher
    become_user: cyberfighter
    copy:
      src: files/tasmotizer-launcher
      dest: ~/projects/home-automation/tasmotizer/tasmotizer-launcher
      owner: cyberfighter
      group: cyberfighter
      mode: '0775'
  - name: Copy Tasmotizer Shortcut
    become_user: cyberfighter
    copy:
      src: files/tasmotizer.desktop
      dest: ~/.local/share/applications/tasmotizer.desktop
      owner: cyberfighter
      group: cyberfighter
      mode: '0664'
# PrusaSlicer Icon
  - name: Copy PrusaSlicer icon
    become_user: cyberfighter
    copy:
      src: files/PrusaSlicer.png
      dest: ~/projects/3D-printing/PrusaSlicer.png
      owner: cyberfighter
      group: cyberfighter
      mode: '0644'
  - name: Copy PrusaSlicer Shortcut
    become_user: cyberfighter
    copy:
      src: files/PrusaSlicer.desktop
      dest: ~/.local/share/applications/PrusaSlicer.desktop
      owner: cyberfighter
      group: cyberfighter
      mode: '0664'
# xLights Launcher
  - name: Copy xLights icon
    become_user: cyberfighter
    copy:
      src: files/xLights.png
      dest: ~/projects/RGB-Lights/xLights.png
      owner: cyberfighter
      group: cyberfighter
      mode: '0644'
  - name: Copy xLights Shortcut
    become_user: cyberfighter
    copy:
      src: files/xLights.desktop
      dest: ~/.local/share/applications/xLights.desktop
      owner: cyberfighter
      group: cyberfighter
      mode: '0664'
  - name: Copy 5k Wallpaper  Shortcut
    become_user: cyberfighter
    copy:
      src: files/5k-wallpaper.desktop
      dest: ~/.local/share/applications/5k-wallpaper.desktop
      owner: cyberfighter
      group: cyberfighter
      mode: '0664'

# Systemd services
  - name: Start Profile Sync Daemon
    become_user: cyberfighter
    systemd:
      name: psd
      scope: user
      state: started
      enabled: yes

# Set User Settings
  # Set Wallpaper
  - name: copy HD wallpaper file
    copy:
      src: files/ansible-flying-spaceship-wallpaper.jpg
      dest: /usr/share/backgrounds/ansible-flying-spaceship-wallpaper.jpg
      owner: root
      group: root
  - name: copy 8K wallpaper file
    copy:
      src: files/ansible-space_7680x2160.jpg
      dest: /usr/share/backgrounds/ansible-space_7680x2160.jpg
      owner: root
      group: root
  - name: set wallpaper
    become_user: cyberfighter
    dconf:
      key: "/org/gnome/desktop/background/picture-uri"
      value: "'file://///usr/share/backgrounds/ansible-flying-spaceship-wallpaper.jpg'"
  - name: set wallpaper position
    become_user: cyberfighter
    dconf:
      key: "/org/gnome/desktop/background/picture-options"
      value: "'zoom'"
  # Gnome Tweaks
  - name: Apply Gnome Tweaks Button Layout
    become_user: cyberfighter
    dconf:
      key: "/org/gnome/desktop/wm/preferences/button-layout"
      value: "'appmenu:minimize,maximize,close'"
  - name: Apply Gnome Tweaks Battery Percentage
    become_user: cyberfighter
    dconf:
      key: "/org/gnome/desktop/interface/show-battery-percentage"
      value: "true"
  - name: Apply Gnome Tweaks Show Weekday
    become_user: cyberfighter
    dconf:
      key: "/org/gnome/desktop/interface/clock-show-weekday"
      value: "true"

# Install my own projects
  - name: Create docker folders for my projects
    become_user: cyberfighter
    file:
      path: ~/projects/docker
      state: directory
  - name: Create ansible folders for my projects
    become_user: cyberfighter
    file:
      path: ~/projects/ansible
      state: directory
  - name: Install my ansible-desktop project from Git
    become_user: cyberfighter
    git:
      repo: 'https://github.com/Cyberfighter/ansible-desktop.git'
      dest: ~/projects/ansible/ansible-desktop
      clone: yes
      update: yes
    
